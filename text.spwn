#[cache_output]

// on text functions
extract obj_props

extract import "consts.spwn"
extract import "utils.spwn"

let current_character = "je moeder"

let CHARACTERS = {
    narrator: { name: "", },
    s: { name: "???", pos: {x: 80, y: 50}, group: ?g, visible: false, },
    m: { name: "Girl 3", pos: {x: 80, y: 50}, group: ?g, visible: false, },
    n: { name: "Girl 2", pos: {x: 80, y: 50}, group: ?g, visible: false, },
    y: { name: "Girl 1", pos: {x: 80, y: 50}, group: ?g, visible: false, },
    ny: { name: "Nat & Yuri", },
    mc: { name: PLAYER_NAME, },
}

let x_offset = 35 - 300

increment_y_offset = (number: @number) { x_offset += number }
get_y_offset = () => x_offset

//    x*0.125     y/7.2    // move units
//    x*0.375     y/2.4    // obj units
//    x = 18b    y = 10b   // total grid squares (blocks) per each dimension

tcommon = (char, x_pix = 640, x_off: @number = 0, y_off: @number = 0) {
    x = x_pix*0.125
    pos = CHARACTERS[char].pos

    if CHARACTERS[char].visible {
        $.add(obj{
            OBJ_ID: 1614, // collectable id
            X: x_off, Y: y_off + get_y_offset() + 300,
            GROUPS: [_SCENE_GROUP, _TEXT_GROUP, _INVISIBLE_GROUP],
            SCALING: 6,
            TARGET: !{
                -> CHARACTERS[char].group.move(x-pos.x, 50-pos.y, 0.25, EASE_IN)
                -> CHARACTERS[char].group.alpha(1, 0.25) // placing it here is VERY benefic for the group and obj count
            },
            PICKUP_MODE: 2, // toggle
            ACTIVATE_GROUP: true, // on
        })
    } else { // if the character is invisible, move to current position instantly then make it visible
        $.add(obj{
            OBJ_ID: 1614, // collectable id
            X: x_off, Y: y_off + get_y_offset() + 300,
            GROUPS: [_SCENE_GROUP, _TEXT_GROUP, _INVISIBLE_GROUP],
            SCALING: 6,
            TARGET: !{
                -> CHARACTERS[char].group.move(x-pos.x, 50-pos.y, 0)
                -> CHARACTERS[char].group.alpha(1, 0.25) // placing it here is VERY benefic for the group and obj count
            },
            PICKUP_MODE: 2, // toggle
            ACTIVATE_GROUP: true, // on
        })
    }
    
    CHARACTERS[char].visible = true
    CHARACTERS[char].pos = {x: x, y: 50}
}

tinstant = (char, x_pix = 640, x_off: @number = 0, y_off: @number = 0) {
    x = x_pix*0.125
    pos = CHARACTERS[char].pos

    $.add(obj{
        OBJ_ID: 1614, // collectable id
        X: x_off, Y: y_off + get_y_offset() + 300,
        GROUPS: [_SCENE_GROUP, _TEXT_GROUP, _INVISIBLE_GROUP],
        SCALING: 6,
        TARGET: !{
            -> CHARACTERS[char].group.move(x-pos.x, 50-pos.y, 0)
        },
        PICKUP_MODE: 2, // toggle
        ACTIVATE_GROUP: true, // on
    })
    
    CHARACTERS[char].visible = true
    CHARACTERS[char].pos = {x: x, y: 50}
}

focus = (char, x_pix = 640, x_off: @number = 0, y_off: @number = 0) {
    x = x_pix*0.125
    pos = CHARACTERS[char].pos

    $.add(obj{
        OBJ_ID: 1614, // collectable id
        X: x_off, Y: y_off + get_y_offset() + 300,
        GROUPS: [_SCENE_GROUP, _TEXT_GROUP, _INVISIBLE_GROUP],
        SCALING: 6,
        TARGET: !{
            -> CHARACTERS[char].group.move(x-pos.x, 55-pos.y, 0.25, EASE_IN)
            -> CHARACTERS[char].group.alpha(1, 0.25) // placing it here is VERY benefic for the group and obj count
        },
        PICKUP_MODE: 2, // toggle
        ACTIVATE_GROUP: true, // on
    })
    
    CHARACTERS[char].visible = true
    CHARACTERS[char].pos = {x: x, y: 55}
}

sink = (char, x_pix = 640, x_off: @number = 0, y_off: @number = 0) {
    x = x_pix*0.125
    pos = CHARACTERS[char].pos

    $.add(obj{
        OBJ_ID: 1614, // collectable id
        X: x_off, Y: y_off + get_y_offset() + 300,
        GROUPS: [_SCENE_GROUP, _TEXT_GROUP, _INVISIBLE_GROUP],
        SCALING: 6,
        TARGET: !{
            -> CHARACTERS[char].group.move(x-pos.x, 45-pos.y, 0.5, EASE_IN)
        },
        PICKUP_MODE: 2, // toggle
        ACTIVATE_GROUP: true, // on
    })
    
    CHARACTERS[char].visible = true
    CHARACTERS[char].pos = {x: x, y: 45}
} 

hop = (char, x_pix = 640, x_off: @number = 0, y_off: @number = 0) {
    x = x_pix*0.125
    pos = CHARACTERS[char].pos

    group = ?g
    $.add(obj{
        OBJ_ID: 1614, // collectable id
        X: x_off, Y: y_off + get_y_offset() + 300,
        GROUPS: [_SCENE_GROUP, _TEXT_GROUP, _INVISIBLE_GROUP],
        SCALING: 6,
        TARGET: !{
            -> CHARACTERS[char].group.move(0, 10, 0.1, EASE_OUT)
            // dont remove the arrows or the optimizer is gonna fuck everything up
            // somehow it works without the arrows anyways so thats nice yk
            -> CHARACTERS[char].group.move(0, -10, 0.2, EASE_IN)
        },
        PICKUP_MODE: 2, // toggle
        ACTIVATE_GROUP: true, // on
    })

    CHARACTERS[char].visible = true
} 

leftin = (char, x_pix = 640, x_off: @number = 0, y_off: @number = 0) {
    x = x_pix*0.125
    pos = CHARACTERS[char].pos

    $.add(obj{
        OBJ_ID: 1614, // collectable id
        X: x_off, Y: y_off + get_y_offset() + 300,
        GROUPS: [_SCENE_GROUP, _TEXT_GROUP, _INVISIBLE_GROUP],
        SCALING: 6,
        TARGET: !{
            -> CHARACTERS[char].group.move(-37.5-pos.x, 50-pos.y, 0)
            -> CHARACTERS[char].group.move(x, 0, 0.25, EASE_IN)
        },
        PICKUP_MODE: 2, // toggle
        ACTIVATE_GROUP: true, // on
    })
    
    CHARACTERS[char].visible = true
    CHARACTERS[char].pos = {x: -37.5, y: 50}
}

thide = (char, x_off: @number = 0, y_off: @number = 0) {
    $.add(obj{
        OBJ_ID: 1614, // collectable id
        X: x_off, Y: y_off + get_y_offset() + 300,
        GROUPS: [_SCENE_GROUP, _TEXT_GROUP, _INVISIBLE_GROUP],
        SCALING: 6,
        TARGET: !{
            -> CHARACTERS[char].group.move(0, -5, 0.25, EASE_IN)
            -> CHARACTERS[char].group.alpha(0, 0.25)
        },
        PICKUP_MODE: 2, // toggle
        ACTIVATE_GROUP: true, // on
    })

    CHARACTERS[char].visible = false
    CHARACTERS[char].pos = {x: CHARACTERS[char].pos.x, y: CHARACTERS[char].pos.y - 5}
}

lhide = (char, x_off: @number = 0, y_off: @number = 0) {
    pos = CHARACTERS[char].pos

    $.add(obj{
        OBJ_ID: 1614, // collectable id
        X: x_off, Y: y_off + get_y_offset() + 300,
        GROUPS: [_SCENE_GROUP, _TEXT_GROUP, _INVISIBLE_GROUP],
        SCALING: 6,
        TARGET: !{
            CHARACTERS[char].group.move(-37.5 - pos.x, 0, 0.25, EASE_OUT)
        },
        PICKUP_MODE: 2, // toggle
        ACTIVATE_GROUP: true, // on
    })

    CHARACTERS[char].visible = false
    CHARACTERS[char].pos = {x: -37.5, y: CHARACTERS[char].pos.y}
}

return {
    show_character: (tokens, x_off: @number = 0, y_off: @number = 0) {
        // show sayori zorder 1 at thide (example command thing)
        // not sure if i currently need zorder so im gonna skip that
    
        char_name = tokens[0] // current character's name
        char = char_name[0] // get the first letter of the character's name
        char_index = tokens.index("at") // get the index of "at"
    
        // the characetr gets shown in tcommon() and focus()
    
        if char_index != null && char_index < tokens.length - 1 {
            transform_type = tokens[char_index + 1]
            
            if transform_type.length == 3 && transform_type[1].is_digit() && transform_type[2].is_digit() {
                [kind, quantity, position] = @array(transform_type)

                macro = match kind {
                    =="t": tcommon,
                    =="i": tinstant,
                    =="f": focus,
                    =="s": sink,
                    =="h": hop,
                    =="l": leftin,
                }
                // if we can find a formula we could make this even shorter
                new_position = match [quantity,position] {
                    ==["4","1"]: 200,
                    ==["4","2"]: 493,
                    ==["4","3"]: 786,
                    ==["4","4"]: 1080,
                    ==["3","1"]: 240,
                    ==["3","2"]: 640,
                    ==["3","3"]: 1040,
                    ==["2","1"]: 400,
                    ==["2","2"]: 880,
                    ==["1","1"]: 640,
                    _: () {
                        throw "got '{}' instead of '<char><numb><numb>'".fmt(transform_type)
                    } ()
                }
                return macro(char, new_position, x_off, y_off)
            }

            if transform_type.length == 5 {
                return match transform_type {
                    =="thide": thide(char, x_off, y_off),
                    =="lhide": lhide(char, x_off, y_off),
                    _: () {
                        throw "got '{}' instead of 'thide/lhide'".fmt(transform_type)
                    } ()
                }
            }
            $.print("ðŸ˜Ž {}".fmt(transform_type))
        }
    },

    say_narrator: (command, x_off: @number = 0, y_off: @number = 0) {
        increment_y_offset(300)
        
        if current_character != "narrator" { // checks if the last character was the narrator
            // if it wasnt then make the name holder thingy dissappear
            $.add(obj{
                OBJ_ID: 1614, // collectable id
                X: x_off, Y: y_off + get_y_offset(),
                GROUPS: [_SCENE_GROUP, _TEXT_GROUP, _INVISIBLE_GROUP],
                SCALING: 6,
                TARGET: _NAME_HOLDER_GROUP,
                PICKUP_MODE: 2, // toggle trigger
                ACTIVATE_GROUP: false, // on
            })
        }

        current_character = "narrator"
        $.add(obj{ // text
            OBJ_ID: 914,
            X: x_off, Y: y_off + get_y_offset(),
            SCALING: 0.66,
            GROUPS: [_TEXT_GROUP, _SCENE_GROUP],
            DONT_FADE: true,
            DONT_ENTER: true,
            TEXT: $.b64encode(split_into_lines(command.replace('"', "").replace("\\[player\\]", PLAYER_NAME))).replace("/", "_").replace("\\+", "-")
        })
    },

    say_character: (command, tokens, x_off: @number = 0, y_off: @number = 0, speaker_x_off: @number = 0, speaker_y_off: @number = 0) {
        increment_y_offset(300)

        if current_character == "narrator" { // checks if the last character was the narrator
            // if it was then make the name holder thingy appear
            $.add(obj{
                OBJ_ID: 1614, // collectable id
                X: x_off, Y: y_off + get_y_offset(),
                GROUPS: [_SCENE_GROUP, _TEXT_GROUP, _INVISIBLE_GROUP],
                SCALING: 6,
                TARGET: _NAME_HOLDER_GROUP,
                PICKUP_MODE: 2, // toggle trigger
                ACTIVATE_GROUP: true, // on
            })
        }

        current_character = command
        $.add(obj{ // text
            OBJ_ID: 914,
            X: x_off, Y: y_off + get_y_offset(),
            SCALING: 0.66,
            GROUPS: [_TEXT_GROUP, _SCENE_GROUP],
            DONT_FADE: true,
            DONT_ENTER: true,
            TEXT: $.b64encode(split_into_lines(tokens[-1].replace("\\[player\\]", PLAYER_NAME))).replace("/", "_").replace("\\+", "-")
        })

        $.add(obj{ // speaker name
            OBJ_ID: 914,
            X: speaker_x_off, Y: speaker_y_off + get_y_offset(),
            SCALING: 0.66,
            GROUPS: [_TEXT_GROUP, _SCENE_GROUP],
            DONT_FADE: true,
            DONT_ENTER: true,
            TEXT: $.b64encode(CHARACTERS[current_character].name).replace("/", "_").replace("\\+", "-")
        })
    },
    
    hide_character: (tokens) {
        // hide the character
        CHARACTERS[tokens[0][0]].visible = false
    },

    get_character: (key: @string) {
        return CHARACTERS[key]
    },

    python_single_line: (tokens) {
        // return if the line is not setting a variable (change later)
        if !("=" in tokens) { return }
        variable = tokens[0]
        value = tokens[2]

        // s_name = "Sayori"
        if variable.substr(1, 6) == "_name" { // if it sets someone's name
            CHARACTERS[variable[0]].name = value.replace('"', "").replace("'", "")
        }
    },

    increment_y_offset,
    get_y_offset,
}
